«IMPORT org::applause::applausedsl::applauseDsl»

«EXTENSION templates::iphone::Extensions»
«EXTENSION templates::MetamodelExtensions»

«DEFINE main FOR Application-»
«EXPAND headerFile»
«EXPAND moduleFile»
«ENDDEFINE»


«DEFINE headerFile FOR Application»
«FILE viewFactory().h()-»
«EXPAND ObjC::Import FOREACH viewFactory().headerImports() ONFILECLOSE-»

@interface «viewFactory().use()» : NSObject {

}

«allViews().callSignature().collect(e|e+";").toString("\n")»

@end
«ENDFILE»
«ENDDEFINE»



«DEFINE moduleFile FOR Application»
«FILE viewFactory().m()-»
«EXPAND ObjC::Import FOREACH viewFactory().moduleImports() ONFILECLOSE-»

@implementation «viewFactory().use()»
«EXPAND viewFactoryMethod FOREACH allViews()»
@end
«ENDFILE»
«ENDDEFINE»



«DEFINE viewFactoryMethod FOR View»
«callSignature()» {
	return «class().objc_New(parameters().name, parameters().name)»;
}
«ENDDEFINE»


«DEFINE viewFactoryMethod FOR TabView»
«callSignature()» {
	UITabBarController *tabController = [[[UITabBarController alloc] init] autorelease];

«FOREACH tabs AS tab ITERATOR i-»
	UINavigationController *tab«i.counter1» = [«use("BrandedUIFactory")» createUINavigationControllerWithRootViewController:«(tab.view != null) ? tab.view.call() : "nil"»];
	tab«i.counter1».tabBarItem.title = «tab.title.resolveToValue()»;
	«IF tab.icon != null-»
	tab«i.counter1».tabBarItem.image = [UIImage imageNamed:«tab.icon.resolveToValue()»];
	«ENDIF-»

«ENDFOREACH-»
	tabController.viewControllers = [NSArray arrayWithObjects:«FOREACH tabs AS tab ITERATOR i SEPARATOR ", "»tab«i.counter1»«ENDFOREACH», nil];

	return tabController;
}
«ENDDEFINE»
