/*
* generated by Xtext
*/
grammar InternalApplauseDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.applause.applausedsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.applause.applausedsl.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.applause.applausedsl.services.ApplauseDslGrammarAccess;

}

@parser::members {

 	private ApplauseDslGrammarAccess grammarAccess;
 	
    public InternalApplauseDslParser(TokenStream input, IAstFactory factory, ApplauseDslGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/applause/applausedsl/parser/antlr/internal/InternalApplauseDsl.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected ApplauseDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getModelRule(), currentNode); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getModelAccess().getApplicationApplicationParserRuleCall_0_0(), currentNode); 
	    }
		lv_application_0_0=ruleApplication		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"application",
	        		lv_application_0_0, 
	        		"Application", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getModelAccess().getElementsModelElementParserRuleCall_1_0(), currentNode); 
	    }
		lv_elements_1_0=ruleModelElement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elements",
	        		lv_elements_1_0, 
	        		"ModelElement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)
;





// Entry rule entryRuleApplication
entryRuleApplication returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getApplicationRule(), currentNode); }
	 iv_ruleApplication=ruleApplication 
	 { $current=$iv_ruleApplication.current; } 
	 EOF 
;

// Rule Application
ruleApplication returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'application' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getApplicationKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getApplicationAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getApplicationAccess().getUnorderedGroup_3());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getApplicationAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getApplicationAccess().getUnorderedGroup_3(), 0);
	 				}
					(	'background:' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getBackgroundKeyword_3_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getApplicationAccess().getBackgroundScalarExpressionParserRuleCall_3_0_1_0(), currentNode); 
	    }
		lv_background_5_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"background",
	        		lv_background_5_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getApplicationAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getApplicationAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getApplicationAccess().getUnorderedGroup_3(), 1);
	 				}
					(	'view:' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getViewKeyword_3_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getApplicationAccess().getStartViewViewCallParserRuleCall_3_1_1_0(), currentNode); 
	    }
		lv_startView_7_0=ruleViewCall		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"startView",
	        		lv_startView_7_0, 
	        		"ViewCall", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getApplicationAccess().getUnorderedGroup_3());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getApplicationAccess().getUnorderedGroup_3())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getApplicationAccess().getUnorderedGroup_3());
	}

)	'}' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleModelElement
entryRuleModelElement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getModelElementRule(), currentNode); }
	 iv_ruleModelElement=ruleModelElement 
	 { $current=$iv_ruleModelElement.current; } 
	 EOF 
;

// Rule ModelElement
ruleModelElement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getModelElementAccess().getTypeParserRuleCall_0(), currentNode); 
    }
    this_Type_0=ruleType
    { 
        $current = $this_Type_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelElementAccess().getParameterizedModelElementParserRuleCall_1(), currentNode); 
    }
    this_ParameterizedModelElement_1=ruleParameterizedModelElement
    { 
        $current = $this_ParameterizedModelElement_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypeRule(), currentNode); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeAccess().getSimpleTypeParserRuleCall_0(), currentNode); 
    }
    this_SimpleType_0=ruleSimpleType
    { 
        $current = $this_SimpleType_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeAccess().getEntityParserRuleCall_1(), currentNode); 
    }
    this_Entity_1=ruleEntity
    { 
        $current = $this_Entity_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleSimpleType
entryRuleSimpleType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSimpleTypeRule(), currentNode); }
	 iv_ruleSimpleType=ruleSimpleType 
	 { $current=$iv_ruleSimpleType.current; } 
	 EOF 
;

// Rule SimpleType
ruleSimpleType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'type' 
    {
        createLeafNode(grammarAccess.getSimpleTypeAccess().getTypeKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getSimpleTypeAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'mapsTo' 
    {
        createLeafNode(grammarAccess.getSimpleTypeAccess().getMapsToKeyword_2(), null); 
    }
(
(
		lv_platformType_3_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getSimpleTypeAccess().getPlatformTypeSTRINGTerminalRuleCall_3_0(), "platformType"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"platformType",
	        		lv_platformType_3_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEntityRule(), currentNode); }
	 iv_ruleEntity=ruleEntity 
	 { $current=$iv_ruleEntity.current; } 
	 EOF 
;

// Rule Entity
ruleEntity returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'entity' 
    {
        createLeafNode(grammarAccess.getEntityAccess().getEntityKeyword_0(), null); 
    }
(
(
		lv_runtimeType_1_0=	'class' 
    {
        createLeafNode(grammarAccess.getEntityAccess().getRuntimeTypeClassKeyword_1_0(), "runtimeType"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEntityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "runtimeType", true, "class", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEntityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'extends' 
    {
        createLeafNode(grammarAccess.getEntityAccess().getExtendsKeyword_3_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getEntityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getEntityAccess().getExtendsEntityCrossReference_3_1_0(), "extends"); 
	}

)
))?	'{' 
    {
        createLeafNode(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEntityAccess().getPropertiesPropertyParserRuleCall_5_0(), currentNode); 
	    }
		lv_properties_6_0=ruleProperty		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEntityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"properties",
	        		lv_properties_6_0, 
	        		"Property", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPropertyRule(), currentNode); }
	 iv_ruleProperty=ruleProperty 
	 { $current=$iv_ruleProperty.current; } 
	 EOF 
;

// Rule Property
ruleProperty returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertyAccess().getTypeRefTypeReferenceParserRuleCall_0_0(), currentNode); 
	    }
		lv_typeRef_0_0=ruleTypeReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"typeRef",
	        		lv_typeRef_0_0, 
	        		"TypeReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleTypeReference
entryRuleTypeReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypeReferenceRule(), currentNode); }
	 iv_ruleTypeReference=ruleTypeReference 
	 { $current=$iv_ruleTypeReference.current; } 
	 EOF 
;

// Rule TypeReference
ruleTypeReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getTypeReferenceAccess().getTypeTypeCrossReference_0_0(), "type"); 
	}

)
)(
(
		lv_many_1_0=	'[]' 
    {
        createLeafNode(grammarAccess.getTypeReferenceAccess().getManyLeftSquareBracketRightSquareBracketKeyword_1_0(), "many"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "many", true, "[]", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?)
;





// Entry rule entryRuleProjectClass
entryRuleProjectClass returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getProjectClassRule(), currentNode); }
	 iv_ruleProjectClass=ruleProjectClass 
	 { $current=$iv_ruleProjectClass.current; } 
	 EOF 
;

// Rule ProjectClass
ruleProjectClass returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'class' 
    {
        createLeafNode(grammarAccess.getProjectClassAccess().getClassKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getProjectClassAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProjectClassRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDeclarationRule(), currentNode); }
	 iv_ruleDeclaration=ruleDeclaration 
	 { $current=$iv_ruleDeclaration.current; } 
	 EOF 
;

// Rule Declaration
ruleDeclaration returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getDeclarationAccess().getParameterParserRuleCall_0(), currentNode); 
    }
    this_Parameter_0=ruleParameter
    { 
        $current = $this_Parameter_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDeclarationAccess().getAssignmentParserRuleCall_1(), currentNode); 
    }
    this_Assignment_1=ruleAssignment
    { 
        $current = $this_Assignment_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDeclarationAccess().getCollectionIteratorParserRuleCall_2(), currentNode); 
    }
    this_CollectionIterator_2=ruleCollectionIterator
    { 
        $current = $this_CollectionIterator_2.current; 
        currentNode = currentNode.getParent();
    }
)
;







// Entry rule entryRuleObjectReference
entryRuleObjectReference returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ currentNode = createCompositeNode(grammarAccess.getObjectReferenceRule(), currentNode); }
	 iv_ruleObjectReference=ruleObjectReference 
	 { $current=$iv_ruleObjectReference.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ObjectReference
ruleObjectReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getObjectReferenceAccess().getObjectDeclarationCrossReference_0_0(), "object"); 
	}

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getObjectReferenceAccess().getTailPropertyReferenceParserRuleCall_1_0(), currentNode); 
	    }
		lv_tail_1_0=rulePropertyReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"tail",
	        		lv_tail_1_0, 
	        		"PropertyReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePropertyReference
entryRulePropertyReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPropertyReferenceRule(), currentNode); }
	 iv_rulePropertyReference=rulePropertyReference 
	 { $current=$iv_rulePropertyReference.current; } 
	 EOF 
;

// Rule PropertyReference
rulePropertyReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'.' 
    {
        createLeafNode(grammarAccess.getPropertyReferenceAccess().getFullStopKeyword_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getPropertyReferenceAccess().getObjectPropertyCrossReference_1_0(), "object"); 
	}

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertyReferenceAccess().getTailPropertyReferenceParserRuleCall_2_0(), currentNode); 
	    }
		lv_tail_2_0=rulePropertyReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"tail",
	        		lv_tail_2_0, 
	        		"PropertyReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getExpressionRule(), currentNode); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getCollectionLiteralParserRuleCall_0(), currentNode); 
    }
    this_CollectionLiteral_0=ruleCollectionLiteral
    { 
        $current = $this_CollectionLiteral_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getCollectionFunctionParserRuleCall_1(), currentNode); 
    }
    this_CollectionFunction_1=ruleCollectionFunction
    { 
        $current = $this_CollectionFunction_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getStringLiteralParserRuleCall_2(), currentNode); 
    }
    this_StringLiteral_2=ruleStringLiteral
    { 
        $current = $this_StringLiteral_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getStringFunctionParserRuleCall_3(), currentNode); 
    }
    this_StringFunction_3=ruleStringFunction
    { 
        $current = $this_StringFunction_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getObjectReferenceParserRuleCall_4(), currentNode); 
    }
    this_ObjectReference_4=ruleObjectReference
    { 
        $current = $this_ObjectReference_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getContentProviderCallParserRuleCall_5(), currentNode); 
    }
    this_ContentProviderCall_5=ruleContentProviderCall
    { 
        $current = $this_ContentProviderCall_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getBindingParserRuleCall_6(), currentNode); 
    }
    this_Binding_6=ruleBinding
    { 
        $current = $this_Binding_6.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleScalarExpression
entryRuleScalarExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getScalarExpressionRule(), currentNode); }
	 iv_ruleScalarExpression=ruleScalarExpression 
	 { $current=$iv_ruleScalarExpression.current; } 
	 EOF 
;

// Rule ScalarExpression
ruleScalarExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getScalarExpressionAccess().getStringLiteralParserRuleCall_0(), currentNode); 
    }
    this_StringLiteral_0=ruleStringLiteral
    { 
        $current = $this_StringLiteral_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getScalarExpressionAccess().getStringFunctionParserRuleCall_1(), currentNode); 
    }
    this_StringFunction_1=ruleStringFunction
    { 
        $current = $this_StringFunction_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getScalarExpressionAccess().getObjectReferenceParserRuleCall_2(), currentNode); 
    }
    this_ObjectReference_2=ruleObjectReference
    { 
        $current = $this_ObjectReference_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getScalarExpressionAccess().getBindingParserRuleCall_3(), currentNode); 
    }
    this_Binding_3=ruleBinding
    { 
        $current = $this_Binding_3.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getStringLiteralRule(), currentNode); }
	 iv_ruleStringLiteral=ruleStringLiteral 
	 { $current=$iv_ruleStringLiteral.current; } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_value_0_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStringLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_0_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRuleStringFunction
entryRuleStringFunction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getStringFunctionRule(), currentNode); }
	 iv_ruleStringFunction=ruleStringFunction 
	 { $current=$iv_ruleStringFunction.current; } 
	 EOF 
;

// Rule StringFunction
ruleStringFunction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
    { 
        temp=factory.create(grammarAccess.getStringFunctionAccess().getStringConcatAction_0_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getStringFunctionAccess().getStringConcatAction_0_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'(' 
    {
        createLeafNode(grammarAccess.getStringFunctionAccess().getLeftParenthesisKeyword_0_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStringFunctionAccess().getValuesScalarExpressionParserRuleCall_0_2_0(), currentNode); 
	    }
		lv_values_2_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStringFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"values",
	        		lv_values_2_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)+	')' 
    {
        createLeafNode(grammarAccess.getStringFunctionAccess().getRightParenthesisKeyword_0_3(), null); 
    }
)
    |((
    { 
        temp=factory.create(grammarAccess.getStringFunctionAccess().getStringReplaceAction_1_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getStringFunctionAccess().getStringReplaceAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'replace(' 
    {
        createLeafNode(grammarAccess.getStringFunctionAccess().getReplaceKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStringFunctionAccess().getValueScalarExpressionParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_value_6_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStringFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_6_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getStringFunctionAccess().getCommaKeyword_1_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStringFunctionAccess().getMatchScalarExpressionParserRuleCall_1_4_0(), currentNode); 
	    }
		lv_match_8_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStringFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"match",
	        		lv_match_8_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getStringFunctionAccess().getCommaKeyword_1_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStringFunctionAccess().getReplacementScalarExpressionParserRuleCall_1_6_0(), currentNode); 
	    }
		lv_replacement_10_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStringFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"replacement",
	        		lv_replacement_10_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getStringFunctionAccess().getRightParenthesisKeyword_1_7(), null); 
    }
)
    |((
    { 
        temp=factory.create(grammarAccess.getStringFunctionAccess().getStringUrlConformAction_2_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getStringFunctionAccess().getStringUrlConformAction_2_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'urlconform(' 
    {
        createLeafNode(grammarAccess.getStringFunctionAccess().getUrlconformKeyword_2_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStringFunctionAccess().getValueScalarExpressionParserRuleCall_2_2_0(), currentNode); 
	    }
		lv_value_14_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStringFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_14_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getStringFunctionAccess().getRightParenthesisKeyword_2_3(), null); 
    }
))
;





// Entry rule entryRuleBinding
entryRuleBinding returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBindingRule(), currentNode); }
	 iv_ruleBinding=ruleBinding 
	 { $current=$iv_ruleBinding.current; } 
	 EOF 
;

// Rule Binding
ruleBinding returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'bind(' 
    {
        createLeafNode(grammarAccess.getBindingAccess().getBindKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBindingAccess().getTargetObjectReferenceParserRuleCall_1_0(), currentNode); 
	    }
		lv_target_1_0=ruleObjectReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"target",
	        		lv_target_1_0, 
	        		"ObjectReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getBindingAccess().getRightParenthesisKeyword_2(), null); 
    }
)
;





// Entry rule entryRuleImageExpression
entryRuleImageExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getImageExpressionRule(), currentNode); }
	 iv_ruleImageExpression=ruleImageExpression 
	 { $current=$iv_ruleImageExpression.current; } 
	 EOF 
;

// Rule ImageExpression
ruleImageExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.getImageExpressionAccess().getScalarExpressionParserRuleCall(), currentNode); 
    }
    this_ScalarExpression_0=ruleScalarExpression
    { 
        $current = $this_ScalarExpression_0.current; 
        currentNode = currentNode.getParent();
    }

;





// Entry rule entryRuleCollectionExpression
entryRuleCollectionExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCollectionExpressionRule(), currentNode); }
	 iv_ruleCollectionExpression=ruleCollectionExpression 
	 { $current=$iv_ruleCollectionExpression.current; } 
	 EOF 
;

// Rule CollectionExpression
ruleCollectionExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getCollectionExpressionAccess().getCollectionLiteralParserRuleCall_0(), currentNode); 
    }
    this_CollectionLiteral_0=ruleCollectionLiteral
    { 
        $current = $this_CollectionLiteral_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getCollectionExpressionAccess().getCollectionFunctionParserRuleCall_1(), currentNode); 
    }
    this_CollectionFunction_1=ruleCollectionFunction
    { 
        $current = $this_CollectionFunction_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getCollectionExpressionAccess().getObjectReferenceParserRuleCall_2(), currentNode); 
    }
    this_ObjectReference_2=ruleObjectReference
    { 
        $current = $this_ObjectReference_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleCollectionLiteral
entryRuleCollectionLiteral returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCollectionLiteralRule(), currentNode); }
	 iv_ruleCollectionLiteral=ruleCollectionLiteral 
	 { $current=$iv_ruleCollectionLiteral.current; } 
	 EOF 
;

// Rule CollectionLiteral
ruleCollectionLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'[' 
    {
        createLeafNode(grammarAccess.getCollectionLiteralAccess().getLeftSquareBracketKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCollectionLiteralAccess().getItemsScalarExpressionParserRuleCall_1_0(), currentNode); 
	    }
		lv_items_1_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"items",
	        		lv_items_1_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getCollectionLiteralAccess().getCommaKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCollectionLiteralAccess().getItemsScalarExpressionParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_items_3_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"items",
	        		lv_items_3_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getCollectionLiteralAccess().getRightSquareBracketKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleCollectionFunction
entryRuleCollectionFunction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCollectionFunctionRule(), currentNode); }
	 iv_ruleCollectionFunction=ruleCollectionFunction 
	 { $current=$iv_ruleCollectionFunction.current; } 
	 EOF 
;

// Rule CollectionFunction
ruleCollectionFunction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getCollectionFunctionAccess().getStringSplitAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getCollectionFunctionAccess().getStringSplitAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'split(' 
    {
        createLeafNode(grammarAccess.getCollectionFunctionAccess().getSplitKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCollectionFunctionAccess().getValueScalarExpressionParserRuleCall_2_0(), currentNode); 
	    }
		lv_value_2_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_2_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getCollectionFunctionAccess().getCommaKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCollectionFunctionAccess().getDelimiterScalarExpressionParserRuleCall_4_0(), currentNode); 
	    }
		lv_delimiter_4_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"delimiter",
	        		lv_delimiter_4_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getCollectionFunctionAccess().getRightParenthesisKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleCollectionIterator
entryRuleCollectionIterator returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCollectionIteratorRule(), currentNode); }
	 iv_ruleCollectionIterator=ruleCollectionIterator 
	 { $current=$iv_ruleCollectionIterator.current; } 
	 EOF 
;

// Rule CollectionIterator
ruleCollectionIterator returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'for' 
    {
        createLeafNode(grammarAccess.getCollectionIteratorAccess().getForKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getCollectionIteratorAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionIteratorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'in' 
    {
        createLeafNode(grammarAccess.getCollectionIteratorAccess().getInKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCollectionIteratorAccess().getCollectionCollectionExpressionParserRuleCall_3_0(), currentNode); 
	    }
		lv_collection_3_0=ruleCollectionExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionIteratorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"collection",
	        		lv_collection_3_0, 
	        		"CollectionExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getParameterRule(), currentNode); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParameterAccess().getTypeRefTypeReferenceParserRuleCall_0_0(), currentNode); 
	    }
		lv_typeRef_0_0=ruleTypeReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"typeRef",
	        		lv_typeRef_0_0, 
	        		"TypeReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleParameterizedModelElement
entryRuleParameterizedModelElement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getParameterizedModelElementRule(), currentNode); }
	 iv_ruleParameterizedModelElement=ruleParameterizedModelElement 
	 { $current=$iv_ruleParameterizedModelElement.current; } 
	 EOF 
;

// Rule ParameterizedModelElement
ruleParameterizedModelElement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getParameterizedModelElementAccess().getViewParserRuleCall_0(), currentNode); 
    }
    this_View_0=ruleView
    { 
        $current = $this_View_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getParameterizedModelElementAccess().getContentProviderParserRuleCall_1(), currentNode); 
    }
    this_ContentProvider_1=ruleContentProvider
    { 
        $current = $this_ContentProvider_1.current; 
        currentNode = currentNode.getParent();
    }
)
;







// Entry rule entryRuleParameterDefinitions
entryRuleParameterDefinitions returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getParameterDefinitionsRule(), currentNode); }
	 iv_ruleParameterDefinitions=ruleParameterDefinitions 
	 { $current=$iv_ruleParameterDefinitions.current; } 
	 EOF 
;

// Rule ParameterDefinitions
ruleParameterDefinitions returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getParameterDefinitionsAccess().getParameterDefinitionsAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getParameterDefinitionsAccess().getParameterDefinitionsAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'(' 
    {
        createLeafNode(grammarAccess.getParameterDefinitionsAccess().getLeftParenthesisKeyword_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParameterDefinitionsAccess().getDefinitionsParameterParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_definitions_2_0=ruleParameter		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterDefinitionsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"definitions",
	        		lv_definitions_2_0, 
	        		"Parameter", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getParameterDefinitionsAccess().getCommaKeyword_1_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParameterDefinitionsAccess().getDefinitionsParameterParserRuleCall_1_2_1_0(), currentNode); 
	    }
		lv_definitions_4_0=ruleParameter		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterDefinitionsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"definitions",
	        		lv_definitions_4_0, 
	        		"Parameter", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	')' 
    {
        createLeafNode(grammarAccess.getParameterDefinitionsAccess().getRightParenthesisKeyword_1_3(), null); 
    }
)?)
;





// Entry rule entryRuleParameterValues
entryRuleParameterValues returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getParameterValuesRule(), currentNode); }
	 iv_ruleParameterValues=ruleParameterValues 
	 { $current=$iv_ruleParameterValues.current; } 
	 EOF 
;

// Rule ParameterValues
ruleParameterValues returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getParameterValuesAccess().getParameterValuesAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getParameterValuesAccess().getParameterValuesAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'(' 
    {
        createLeafNode(grammarAccess.getParameterValuesAccess().getLeftParenthesisKeyword_1(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParameterValuesAccess().getValuesExpressionParserRuleCall_2_0_0(), currentNode); 
	    }
		lv_values_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterValuesRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"values",
	        		lv_values_2_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getParameterValuesAccess().getCommaKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParameterValuesAccess().getValuesExpressionParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_values_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterValuesRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"values",
	        		lv_values_4_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	')' 
    {
        createLeafNode(grammarAccess.getParameterValuesAccess().getRightParenthesisKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleContentProvider
entryRuleContentProvider returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getContentProviderRule(), currentNode); }
	 iv_ruleContentProvider=ruleContentProvider 
	 { $current=$iv_ruleContentProvider.current; } 
	 EOF 
;

// Rule ContentProvider
ruleContentProvider returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'contentprovider' 
    {
        createLeafNode(grammarAccess.getContentProviderAccess().getContentproviderKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getContentProviderAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContentProviderAccess().getParametersParameterDefinitionsParserRuleCall_2_0(), currentNode); 
	    }
		lv_parameters_2_0=ruleParameterDefinitions		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"parameters",
	        		lv_parameters_2_0, 
	        		"ParameterDefinitions", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'returns' 
    {
        createLeafNode(grammarAccess.getContentProviderAccess().getReturnsKeyword_3_0(), null); 
    }

    |(
(
		lv_storing_4_0=	'stores' 
    {
        createLeafNode(grammarAccess.getContentProviderAccess().getStoringStoresKeyword_3_1_0(), "storing"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "storing", true, "stores", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getContentProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getContentProviderAccess().getTypeTypeCrossReference_4_0(), "type"); 
	}

)
)(
(
		lv_many_6_0=	'[]' 
    {
        createLeafNode(grammarAccess.getContentProviderAccess().getManyLeftSquareBracketRightSquareBracketKeyword_5_0(), "many"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "many", true, "[]", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContentProviderAccess().getImplementationContentProviderImplementationParserRuleCall_6_0(), currentNode); 
	    }
		lv_implementation_7_0=ruleContentProviderImplementation		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"implementation",
	        		lv_implementation_7_0, 
	        		"ContentProviderImplementation", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)
;





// Entry rule entryRuleContentProviderImplementation
entryRuleContentProviderImplementation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getContentProviderImplementationRule(), currentNode); }
	 iv_ruleContentProviderImplementation=ruleContentProviderImplementation 
	 { $current=$iv_ruleContentProviderImplementation.current; } 
	 EOF 
;

// Rule ContentProviderImplementation
ruleContentProviderImplementation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getContentProviderImplementationAccess().getUrlContentProviderImplementationParserRuleCall_0(), currentNode); 
    }
    this_UrlContentProviderImplementation_0=ruleUrlContentProviderImplementation
    { 
        $current = $this_UrlContentProviderImplementation_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getContentProviderImplementationAccess().getCustomContentProviderImplementationParserRuleCall_1(), currentNode); 
    }
    this_CustomContentProviderImplementation_1=ruleCustomContentProviderImplementation
    { 
        $current = $this_CustomContentProviderImplementation_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleUrlContentProviderImplementation
entryRuleUrlContentProviderImplementation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUrlContentProviderImplementationRule(), currentNode); }
	 iv_ruleUrlContentProviderImplementation=ruleUrlContentProviderImplementation 
	 { $current=$iv_ruleUrlContentProviderImplementation.current; } 
	 EOF 
;

// Rule UrlContentProviderImplementation
ruleUrlContentProviderImplementation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'fetches' 
    {
        createLeafNode(grammarAccess.getUrlContentProviderImplementationAccess().getFetchesKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUrlContentProviderImplementationAccess().getFormatSerializationFormatEnumRuleCall_1_0(), currentNode); 
	    }
		lv_format_1_0=ruleSerializationFormat		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUrlContentProviderImplementationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"format",
	        		lv_format_1_0, 
	        		"SerializationFormat", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'from' 
    {
        createLeafNode(grammarAccess.getUrlContentProviderImplementationAccess().getFromKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUrlContentProviderImplementationAccess().getUrlScalarExpressionParserRuleCall_3_0(), currentNode); 
	    }
		lv_url_3_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUrlContentProviderImplementationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"url",
	        		lv_url_3_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'selects' 
    {
        createLeafNode(grammarAccess.getUrlContentProviderImplementationAccess().getSelectsKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUrlContentProviderImplementationAccess().getSelectionScalarExpressionParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_selection_5_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUrlContentProviderImplementationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"selection",
	        		lv_selection_5_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
;





// Entry rule entryRuleCustomContentProviderImplementation
entryRuleCustomContentProviderImplementation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCustomContentProviderImplementationRule(), currentNode); }
	 iv_ruleCustomContentProviderImplementation=ruleCustomContentProviderImplementation 
	 { $current=$iv_ruleCustomContentProviderImplementation.current; } 
	 EOF 
;

// Rule CustomContentProviderImplementation
ruleCustomContentProviderImplementation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCustomContentProviderImplementationAccess().getProviderClassProjectClassParserRuleCall_0(), currentNode); 
	    }
		lv_providerClass_0_0=ruleProjectClass		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCustomContentProviderImplementationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"providerClass",
	        		lv_providerClass_0_0, 
	        		"ProjectClass", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
;





// Entry rule entryRuleContentProviderCall
entryRuleContentProviderCall returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getContentProviderCallRule(), currentNode); }
	 iv_ruleContentProviderCall=ruleContentProviderCall 
	 { $current=$iv_ruleContentProviderCall.current; } 
	 EOF 
;

// Rule ContentProviderCall
ruleContentProviderCall returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getContentProviderCallRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getContentProviderCallAccess().getTargetContentProviderCrossReference_0_0(), "target"); 
	}

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContentProviderCallAccess().getParametersParameterValuesParserRuleCall_1_0(), currentNode); 
	    }
		lv_parameters_1_0=ruleParameterValues		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentProviderCallRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"parameters",
	        		lv_parameters_1_0, 
	        		"ParameterValues", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAssignmentRule(), currentNode); }
	 iv_ruleAssignment=ruleAssignment 
	 { $current=$iv_ruleAssignment.current; } 
	 EOF 
;

// Rule Assignment
ruleAssignment returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAssignmentAccess().getTypeRefTypeReferenceParserRuleCall_0_0(), currentNode); 
	    }
		lv_typeRef_0_0=ruleTypeReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAssignmentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"typeRef",
	        		lv_typeRef_0_0, 
	        		"TypeReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getAssignmentAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAssignmentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAssignmentAccess().getValueContentProviderCallParserRuleCall_3_0(), currentNode); 
	    }
		lv_value_3_0=ruleContentProviderCall		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAssignmentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_3_0, 
	        		"ContentProviderCall", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleView
entryRuleView returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getViewRule(), currentNode); }
	 iv_ruleView=ruleView 
	 { $current=$iv_ruleView.current; } 
	 EOF 
;

// Rule View
ruleView returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getViewAccess().getTabViewParserRuleCall_0(), currentNode); 
    }
    this_TabView_0=ruleTabView
    { 
        $current = $this_TabView_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getViewAccess().getTableViewParserRuleCall_1(), currentNode); 
    }
    this_TableView_1=ruleTableView
    { 
        $current = $this_TableView_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getViewAccess().getCustomViewParserRuleCall_2(), currentNode); 
    }
    this_CustomView_2=ruleCustomView
    { 
        $current = $this_CustomView_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleTabView
entryRuleTabView returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTabViewRule(), currentNode); }
	 iv_ruleTabView=ruleTabView 
	 { $current=$iv_ruleTabView.current; } 
	 EOF 
;

// Rule TabView
ruleTabView returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'tabview' 
    {
        createLeafNode(grammarAccess.getTabViewAccess().getTabviewKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getTabViewAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTabViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTabViewAccess().getParametersParameterDefinitionsParserRuleCall_2_0(), currentNode); 
	    }
		lv_parameters_2_0=ruleParameterDefinitions		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTabViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"parameters",
	        		lv_parameters_2_0, 
	        		"ParameterDefinitions", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getTabViewAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTabViewAccess().getTabsTabParserRuleCall_4_0(), currentNode); 
	    }
		lv_tabs_4_0=ruleTab		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTabViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"tabs",
	        		lv_tabs_4_0, 
	        		"Tab", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getTabViewAccess().getRightCurlyBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleTab
entryRuleTab returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTabRule(), currentNode); }
	 iv_ruleTab=ruleTab 
	 { $current=$iv_ruleTab.current; } 
	 EOF 
;

// Rule Tab
ruleTab returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'tab' 
    {
        createLeafNode(grammarAccess.getTabAccess().getTabKeyword_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getTabAccess().getLeftCurlyBracketKeyword_1(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getTabAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTabAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTabAccess().getUnorderedGroup_2(), 0);
	 				}
					(	'title:' 
    {
        createLeafNode(grammarAccess.getTabAccess().getTitleKeyword_2_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTabAccess().getTitleScalarExpressionParserRuleCall_2_0_1_0(), currentNode); 
	    }
		lv_title_4_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTabRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_4_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTabAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTabAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTabAccess().getUnorderedGroup_2(), 1);
	 				}
					(	'icon:' 
    {
        createLeafNode(grammarAccess.getTabAccess().getIconKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTabAccess().getIconImageExpressionParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_icon_6_0=ruleImageExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTabRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"icon",
	        		lv_icon_6_0, 
	        		"ImageExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTabAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTabAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTabAccess().getUnorderedGroup_2(), 2);
	 				}
					(	'view:' 
    {
        createLeafNode(grammarAccess.getTabAccess().getViewKeyword_2_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTabAccess().getViewViewCallParserRuleCall_2_2_1_0(), currentNode); 
	    }
		lv_view_8_0=ruleViewCall		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTabRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"view",
	        		lv_view_8_0, 
	        		"ViewCall", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTabAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getTabAccess().getUnorderedGroup_2())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getTabAccess().getUnorderedGroup_2());
	}

)	'}' 
    {
        createLeafNode(grammarAccess.getTabAccess().getRightCurlyBracketKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleTableView
entryRuleTableView returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTableViewRule(), currentNode); }
	 iv_ruleTableView=ruleTableView 
	 { $current=$iv_ruleTableView.current; } 
	 EOF 
;

// Rule TableView
ruleTableView returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'tableview' 
    {
        createLeafNode(grammarAccess.getTableViewAccess().getTableviewKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getTableViewAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTableViewAccess().getParametersParameterDefinitionsParserRuleCall_2_0(), currentNode); 
	    }
		lv_parameters_2_0=ruleParameterDefinitions		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"parameters",
	        		lv_parameters_2_0, 
	        		"ParameterDefinitions", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getTableViewAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTableViewAccess().getVariablesAssignmentParserRuleCall_4_0(), currentNode); 
	    }
		lv_variables_4_0=ruleAssignment		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"variables",
	        		lv_variables_4_0, 
	        		"Assignment", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getTableViewAccess().getUnorderedGroup_5());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTableViewAccess().getUnorderedGroup_5(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTableViewAccess().getUnorderedGroup_5(), 0);
	 				}
					(	'title:' 
    {
        createLeafNode(grammarAccess.getTableViewAccess().getTitleKeyword_5_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTableViewAccess().getTitleScalarExpressionParserRuleCall_5_0_1_0(), currentNode); 
	    }
		lv_title_7_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_7_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTableViewAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTableViewAccess().getUnorderedGroup_5(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTableViewAccess().getUnorderedGroup_5(), 1);
	 				}
					(	'titleImage:' 
    {
        createLeafNode(grammarAccess.getTableViewAccess().getTitleImageKeyword_5_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTableViewAccess().getTitleImageImageExpressionParserRuleCall_5_1_1_0(), currentNode); 
	    }
		lv_titleImage_9_0=ruleImageExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"titleImage",
	        		lv_titleImage_9_0, 
	        		"ImageExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTableViewAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTableViewAccess().getUnorderedGroup_5(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTableViewAccess().getUnorderedGroup_5(), 2);
	 				}
					(	'style:' 
    {
        createLeafNode(grammarAccess.getTableViewAccess().getStyleKeyword_5_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTableViewAccess().getStyleTableViewStyleEnumRuleCall_5_2_1_0(), currentNode); 
	    }
		lv_style_11_0=ruleTableViewStyle		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"style",
	        		lv_style_11_0, 
	        		"TableViewStyle", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTableViewAccess().getUnorderedGroup_5());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getTableViewAccess().getUnorderedGroup_5());
	}

)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTableViewAccess().getSectionsSectionParserRuleCall_6_0(), currentNode); 
	    }
		lv_sections_12_0=ruleSection		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"sections",
	        		lv_sections_12_0, 
	        		"Section", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getTableViewAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;







// Entry rule entryRuleSection
entryRuleSection returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSectionRule(), currentNode); }
	 iv_ruleSection=ruleSection 
	 { $current=$iv_ruleSection.current; } 
	 EOF 
;

// Rule Section
ruleSection returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getSectionAccess().getSectionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getSectionAccess().getSectionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'section' 
    {
        createLeafNode(grammarAccess.getSectionAccess().getSectionKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionAccess().getIteratorCollectionIteratorParserRuleCall_2_0(), currentNode); 
	    }
		lv_iterator_2_0=ruleCollectionIterator		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"iterator",
	        		lv_iterator_2_0, 
	        		"CollectionIterator", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'{' 
    {
        createLeafNode(grammarAccess.getSectionAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(	'title:' 
    {
        createLeafNode(grammarAccess.getSectionAccess().getTitleKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionAccess().getTitleScalarExpressionParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_title_5_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_5_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionAccess().getCellsCellParserRuleCall_5_0(), currentNode); 
	    }
		lv_cells_6_0=ruleCell		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"cells",
	        		lv_cells_6_0, 
	        		"Cell", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getSectionAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleCell
entryRuleCell returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCellRule(), currentNode); }
	 iv_ruleCell=ruleCell 
	 { $current=$iv_ruleCell.current; } 
	 EOF 
;

// Rule Cell
ruleCell returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getCellAccess().getCellAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getCellAccess().getCellAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'cell' 
    {
        createLeafNode(grammarAccess.getCellAccess().getCellKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCellAccess().getTypeCellTypeEnumRuleCall_2_0(), currentNode); 
	    }
		lv_type_2_0=ruleCellType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCellRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_2_0, 
	        		"CellType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCellAccess().getIteratorCollectionIteratorParserRuleCall_3_0(), currentNode); 
	    }
		lv_iterator_3_0=ruleCollectionIterator		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCellRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"iterator",
	        		lv_iterator_3_0, 
	        		"CollectionIterator", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'{' 
    {
        createLeafNode(grammarAccess.getCellAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getCellAccess().getUnorderedGroup_5());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getCellAccess().getUnorderedGroup_5(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getCellAccess().getUnorderedGroup_5(), 0);
	 				}
					(	'text:' 
    {
        createLeafNode(grammarAccess.getCellAccess().getTextKeyword_5_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCellAccess().getTextScalarExpressionParserRuleCall_5_0_1_0(), currentNode); 
	    }
		lv_text_7_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCellRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"text",
	        		lv_text_7_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCellAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getCellAccess().getUnorderedGroup_5(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getCellAccess().getUnorderedGroup_5(), 1);
	 				}
					(	'detailText:' 
    {
        createLeafNode(grammarAccess.getCellAccess().getDetailTextKeyword_5_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCellAccess().getDetailTextScalarExpressionParserRuleCall_5_1_1_0(), currentNode); 
	    }
		lv_detailText_9_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCellRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"detailText",
	        		lv_detailText_9_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCellAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getCellAccess().getUnorderedGroup_5(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getCellAccess().getUnorderedGroup_5(), 2);
	 				}
					(	'image:' 
    {
        createLeafNode(grammarAccess.getCellAccess().getImageKeyword_5_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCellAccess().getImageScalarExpressionParserRuleCall_5_2_1_0(), currentNode); 
	    }
		lv_image_11_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCellRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"image",
	        		lv_image_11_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCellAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getCellAccess().getUnorderedGroup_5(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getCellAccess().getUnorderedGroup_5(), 3);
	 				}
					(	'action:' 
    {
        createLeafNode(grammarAccess.getCellAccess().getActionKeyword_5_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCellAccess().getActionActionParserRuleCall_5_3_1_0(), currentNode); 
	    }
		lv_action_13_0=ruleAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCellRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"action",
	        		lv_action_13_0, 
	        		"Action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCellAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getCellAccess().getUnorderedGroup_5(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getCellAccess().getUnorderedGroup_5(), 4);
	 				}
					(	'accessory:' 
    {
        createLeafNode(grammarAccess.getCellAccess().getAccessoryKeyword_5_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCellAccess().getAccessoryCellAccessoryEnumRuleCall_5_4_1_0(), currentNode); 
	    }
		lv_accessory_15_0=ruleCellAccessory		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCellRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"accessory",
	        		lv_accessory_15_0, 
	        		"CellAccessory", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCellAccess().getUnorderedGroup_5());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getCellAccess().getUnorderedGroup_5());
	}

)	'}' 
    {
        createLeafNode(grammarAccess.getCellAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleCustomView
entryRuleCustomView returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCustomViewRule(), currentNode); }
	 iv_ruleCustomView=ruleCustomView 
	 { $current=$iv_ruleCustomView.current; } 
	 EOF 
;

// Rule CustomView
ruleCustomView returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'customview' 
    {
        createLeafNode(grammarAccess.getCustomViewAccess().getCustomviewKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getCustomViewAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCustomViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCustomViewAccess().getParametersParameterDefinitionsParserRuleCall_2_0(), currentNode); 
	    }
		lv_parameters_2_0=ruleParameterDefinitions		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCustomViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"parameters",
	        		lv_parameters_2_0, 
	        		"ParameterDefinitions", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCustomViewAccess().getProjectClassProjectClassParserRuleCall_3_0(), currentNode); 
	    }
		lv_projectClass_3_0=ruleProjectClass		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCustomViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"projectClass",
	        		lv_projectClass_3_0, 
	        		"ProjectClass", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getActionRule(), currentNode); }
	 iv_ruleAction=ruleAction 
	 { $current=$iv_ruleAction.current; } 
	 EOF 
;

// Rule Action
ruleAction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getActionAccess().getViewCallParserRuleCall_0(), currentNode); 
    }
    this_ViewCall_0=ruleViewCall
    { 
        $current = $this_ViewCall_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getActionAccess().getOpenURLParserRuleCall_1(), currentNode); 
    }
    this_OpenURL_1=ruleOpenURL
    { 
        $current = $this_OpenURL_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getActionAccess().getSelectorParserRuleCall_2(), currentNode); 
    }
    this_Selector_2=ruleSelector
    { 
        $current = $this_Selector_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleViewCall
entryRuleViewCall returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getViewCallRule(), currentNode); }
	 iv_ruleViewCall=ruleViewCall 
	 { $current=$iv_ruleViewCall.current; } 
	 EOF 
;

// Rule ViewCall
ruleViewCall returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getViewCallRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getViewCallAccess().getTargetViewCrossReference_0_0(), "target"); 
	}

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getViewCallAccess().getParametersParameterValuesParserRuleCall_1_0(), currentNode); 
	    }
		lv_parameters_1_0=ruleParameterValues		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewCallRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"parameters",
	        		lv_parameters_1_0, 
	        		"ParameterValues", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleSelector
entryRuleSelector returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSelectorRule(), currentNode); }
	 iv_ruleSelector=ruleSelector 
	 { $current=$iv_ruleSelector.current; } 
	 EOF 
;

// Rule Selector
ruleSelector returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'@selector' 
    {
        createLeafNode(grammarAccess.getSelectorAccess().getSelectorKeyword_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getSelectorAccess().getLeftParenthesisKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSelectorAccess().getNameSelectorNameParserRuleCall_2_0(), currentNode); 
	    }
		lv_name_2_0=ruleSelectorName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"SelectorName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getSelectorAccess().getRightParenthesisKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleSelectorName
entryRuleSelectorName returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSelectorNameRule(), currentNode); } 
	 iv_ruleSelectorName=ruleSelectorName 
	 { $current=$iv_ruleSelectorName.current.getText(); }  
	 EOF 
;

// Rule SelectorName
ruleSelectorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getSelectorNameAccess().getIDTerminalRuleCall_0(), null); 
    }
(
	kw=':' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSelectorNameAccess().getColonKeyword_1_0(), null); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    createLeafNode(grammarAccess.getSelectorNameAccess().getIDTerminalRuleCall_1_1(), null); 
    }
)*(
	kw=':' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSelectorNameAccess().getColonKeyword_2(), null); 
    }
)?)
    ;





// Entry rule entryRuleOpenURL
entryRuleOpenURL returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getOpenURLRule(), currentNode); }
	 iv_ruleOpenURL=ruleOpenURL 
	 { $current=$iv_ruleOpenURL.current; } 
	 EOF 
;

// Rule OpenURL
ruleOpenURL returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOpenURLAccess().getUrlScalarExpressionParserRuleCall_0(), currentNode); 
	    }
		lv_url_0_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOpenURLRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"url",
	        		lv_url_0_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
;





// Rule SerializationFormat
ruleSerializationFormat returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'XML' 
	{
        $current = grammarAccess.getSerializationFormatAccess().getXMLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getSerializationFormatAccess().getXMLEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'JSON' 
	{
        $current = grammarAccess.getSerializationFormatAccess().getJSONEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getSerializationFormatAccess().getJSONEnumLiteralDeclaration_1(), null); 
    }
));



// Rule TableViewStyle
ruleTableViewStyle returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'Plain' 
	{
        $current = grammarAccess.getTableViewStyleAccess().getPlainEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getTableViewStyleAccess().getPlainEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'Grouped' 
	{
        $current = grammarAccess.getTableViewStyleAccess().getGroupedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getTableViewStyleAccess().getGroupedEnumLiteralDeclaration_1(), null); 
    }
));



// Rule CellType
ruleCellType returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'Default' 
	{
        $current = grammarAccess.getCellTypeAccess().getDefaultEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getCellTypeAccess().getDefaultEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'Value1' 
	{
        $current = grammarAccess.getCellTypeAccess().getValue1EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getCellTypeAccess().getValue1EnumLiteralDeclaration_1(), null); 
    }
)
    |(	'Value2' 
	{
        $current = grammarAccess.getCellTypeAccess().getValue2EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getCellTypeAccess().getValue2EnumLiteralDeclaration_2(), null); 
    }
)
    |(	'Subtitle' 
	{
        $current = grammarAccess.getCellTypeAccess().getSubtitleEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getCellTypeAccess().getSubtitleEnumLiteralDeclaration_3(), null); 
    }
));



// Rule CellAccessory
ruleCellAccessory returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'None' 
	{
        $current = grammarAccess.getCellAccessoryAccess().getNoneEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getCellAccessoryAccess().getNoneEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'Link' 
	{
        $current = grammarAccess.getCellAccessoryAccess().getLinkEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getCellAccessoryAccess().getLinkEnumLiteralDeclaration_1(), null); 
    }
)
    |(	'Detail' 
	{
        $current = grammarAccess.getCellAccessoryAccess().getDetailEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getCellAccessoryAccess().getDetailEnumLiteralDeclaration_2(), null); 
    }
)
    |(	'Check' 
	{
        $current = grammarAccess.getCellAccessoryAccess().getCheckEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getCellAccessoryAccess().getCheckEnumLiteralDeclaration_3(), null); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


